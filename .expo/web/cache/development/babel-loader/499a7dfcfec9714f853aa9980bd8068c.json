{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\ES6\\\\KitchenPlus\\\\kitchen-plus\\\\kitchen-plus\\\\src\\\\screens\\\\LoginScreen.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Header from \"../components/Header\";\nimport Spacer from \"../components/Spacer\";\nimport { Text, Input, ThemeProvider, colors } from \"react-native-elements\";\nimport RNRestart from \"react-native-restart\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var errorMessage = _ref.errorMessage,\n      onSubmit = _ref.onSubmit,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    label: \"Email\",\n    value: email,\n    onChangeText: setEmail,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    secureTextEntry: true,\n    label: \"Password\",\n    value: password,\n    onChangeText: setPassword,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(\"view\", {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginScreenButton,\n    onPress: function onPress() {\n      debugger;\n      console.log(navigation);\n    },\n    underlayColor: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: styles.cancelScreen,\n    onPress: function onPress() {\n      return DevSettings.reload();\n    },\n    underlayColor: \"red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), React.createElement(Button, {\n    title: \"Reload\",\n    onPress: function onPress() {\n      debugger;\n      navigation.actions.pop(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    marginBottom: 250\n  },\n  loginScreenButton: {\n    marginRight: 40,\n    marginLeft: 40,\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#1E6738\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#fff\"\n  },\n  loginText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  cancelScreen: {\n    marginRight: 40,\n    marginLeft: 40,\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"red\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#fff\"\n  }\n});\nLoginScreen.navigationOptions = {\n  headerTitle: function headerTitle() {\n    return React.createElement(Header, {\n      title: \"Login\",\n      navigation: nav,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 22\n      }\n    });\n  }\n};\nexport default LoginScreen;","map":{"version":3,"sources":["C:/ES6/KitchenPlus/kitchen-plus/kitchen-plus/src/screens/LoginScreen.js"],"names":["React","useState","Header","Spacer","Text","Input","ThemeProvider","colors","RNRestart","LoginScreen","errorMessage","onSubmit","navigation","email","setEmail","password","setPassword","flex","styles","container","justifyContent","alignItems","flexDirection","loginScreenButton","console","log","loginText","cancelScreen","DevSettings","reload","actions","pop","StyleSheet","create","marginBottom","marginRight","marginLeft","marginTop","paddingTop","paddingBottom","backgroundColor","borderRadius","borderWidth","borderColor","color","textAlign","paddingLeft","paddingRight","navigationOptions","headerTitle","nav"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Platform,\r\n  Button,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport Header from \"../components/Header\";\r\nimport Spacer from \"../components/Spacer\";\r\nimport { Text, Input, ThemeProvider, colors } from \"react-native-elements\";\r\nimport RNRestart from \"react-native-restart\";\r\n\r\nconst LoginScreen = ({ errorMessage, onSubmit, navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <View style={styles.container}>\r\n        <Input\r\n          label=\"Email\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n        <Spacer />\r\n        <Input\r\n          secureTextEntry\r\n          label=\"Password\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n        <view\r\n          style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={styles.loginScreenButton}\r\n            // onPress={() => navigation.navigate(\"products\")}\r\n            onPress={() => {\r\n              debugger;\r\n              console.log(navigation);\r\n            }}\r\n            underlayColor=\"#fff\"\r\n          >\r\n            <Text style={styles.loginText}>Login</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.cancelScreen}\r\n            onPress={() => DevSettings.reload()}\r\n            underlayColor=\"red\"\r\n          >\r\n            <Text style={styles.loginText}>Cancel</Text>\r\n          </TouchableOpacity>\r\n          <Button\r\n            title=\"Reload\"\r\n            onPress={() => {\r\n              debugger;\r\n              navigation.actions.pop(\"Login\");\r\n              // RestartType.Restart();\r\n            }}\r\n          />\r\n        </view>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n//{errorMessage ? (\r\n//<Text style={styles.errorMessage}>{errorMessage}</Text>\r\n//) : null}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    marginBottom: 250,\r\n  },\r\n\r\n  loginScreenButton: {\r\n    marginRight: 40,\r\n    marginLeft: 40,\r\n    marginTop: 10,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: \"#1E6738\",\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"#fff\",\r\n  },\r\n  loginText: {\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  cancelScreen: {\r\n    marginRight: 40,\r\n    marginLeft: 40,\r\n    marginTop: 10,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: \"red\",\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"#fff\",\r\n  },\r\n});\r\n\r\nLoginScreen.navigationOptions = {\r\n  //header: () => false,\r\n  headerTitle: () => <Header title=\"Login\" navigation={nav} />,\r\n};\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}