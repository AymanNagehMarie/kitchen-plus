{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\ES6\\\\KitchenPlus\\\\kitchen-plus\\\\kitchen-plus\\\\App.js\";\n\nimport \"react-native-gesture-handler\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from \"@react-navigation/drawer\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport FirstPage from \"./pages/FirstPage\";\nimport SecondPage from \"./pages/SecondPage\";\nimport ThirdPage from \"./pages/ThirdPage\";\nimport LandingPage from \"./pages/LandingPage\";\nimport CartItemScreen from \"./src/screens/CartItemScreen\";\nimport AddClientScreen from \"./src/screens/AddClientScreen\";\nimport DeliveryListScreen from \"./src/screens/DeliveryListScreen\";\nimport DeliveryOrderDetailScreen from \"./src/screens/DeliveryOrderDetailScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport LogoutScreen from \"./src/screens/LogoutScreen\";\nimport OrderDetailScreen from \"./src/screens/OrderDetailScreen\";\nimport OrderHistoryScreen from \"./src/screens/OrderHistoryScreen\";\nimport ProductScreen from \"./src/screens/ProductScreen\";\nimport ProfileScreen from \"./src/screens/ProfileScreen\";\nimport SalesOrderHistoryScreen from \"./src/screens/SalesOrderHistoryScreen\";\nimport SubscribeScreen from \"./src/screens/SubscribeScreen\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport Header from \"./src/components/Header\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nvar NavigationDrawerStructure = function NavigationDrawerStructure(props) {\n  var toggleDrawer = function toggleDrawer() {\n    props.navigationProps.toggleDrawer();\n  };\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: toggleDrawer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: \"https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png\"\n    },\n    style: {\n      width: 25,\n      height: 25,\n      marginLeft: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar productScreenStack = function productScreenStack(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"FirstPage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"FirstPage\",\n    component: FirstPage,\n    initialParams: route.params,\n    options: {\n      title: \"First Page\",\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#f4511e\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar secondScreenStack = function secondScreenStack(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"SecondPage\",\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#f4511e\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SecondPage\",\n    component: SecondPage,\n    options: {\n      title: \"Second Page\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar thirdScreenStack = function thirdScreenStack(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#f4511e\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"ThirdPage\",\n    component: ThirdPage,\n    options: {\n      title: \"Third Page\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar drawerStack = function drawerStack(_ref4) {\n  var route = _ref4.route;\n  return React.createElement(Drawer.Navigator, {\n    drawerContentOptions: {\n      activeTintColor: \"#e91e63\"\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContentScrollView, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }\n      }), React.createElement(DrawerItemList, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      })), route.params.userType === \"user\" ? React.createElement(DrawerItem, {\n        icon: function icon(_ref5) {\n          var color = _ref5.color,\n              size = _ref5.size;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"account-outline\",\n            color: color,\n            size: size,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }\n          });\n        },\n        label: function label(_ref6) {\n          var color = _ref6.color;\n          return React.createElement(Text, {\n            style: {\n              color: color\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }\n          }, \"Change Access to Guest\");\n        },\n        onPress: function onPress() {\n          return props.navigation.navigate(\"drawerStack\", {\n            userType: \"guest\"\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }) : null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"FirstPage\",\n    options: {\n      drawerLabel: \"First page Option\"\n    },\n    component: productScreenStack,\n    initialParams: {\n      userType: route.params.userType\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }), route.params.userType === \"user\" ? React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n    name: \"SecondPage\",\n    options: {\n      drawerLabel: \"Second page Option\"\n    },\n    component: secondScreenStack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"ThirdPage\",\n    options: {\n      drawerLabel: \"Third page Option\"\n    },\n    component: thirdScreenStack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  })) : null);\n};\n\nvar App = function App() {\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"LandingPage\",\n    component: LandingPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"drawerStack\",\n    component: drawerStack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/ES6/KitchenPlus/kitchen-plus/kitchen-plus/App.js"],"names":["React","NavigationContainer","createStackNavigator","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","MaterialCommunityIcons","FirstPage","SecondPage","ThirdPage","LandingPage","CartItemScreen","AddClientScreen","DeliveryListScreen","DeliveryOrderDetailScreen","LoginScreen","LogoutScreen","OrderDetailScreen","OrderHistoryScreen","ProductScreen","ProfileScreen","SalesOrderHistoryScreen","SubscribeScreen","HomeScreen","Header","Stack","Drawer","NavigationDrawerStructure","props","toggleDrawer","navigationProps","flexDirection","uri","width","height","marginLeft","productScreenStack","navigation","route","params","title","headerLeft","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","secondScreenStack","thirdScreenStack","drawerStack","activeTintColor","userType","color","size","navigate","drawerLabel","App","headerShown"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { Button } from \"react-native\";\n// import { createAppContainer, createSwitchNavigator } from \"react-navigation\";\n// import { createStackNavigator } from \"react-navigation-stack\";\n// import { createDrawerNavigator } from \"react-navigation-drawer\";\n// import { createBottomTabNavigator } from \"react-navigation-tabs\";\n// import { FontAwesome, MaterialIcons } from \"@expo/vector-icons\";\n\n// import CartItemScreen from \"./src/screens/CartItemScreen\";\n// import AddClientScreen from \"./src/screens/AddClientScreen\";\n// import DeliveryListScreen from \"./src/screens/DeliveryListScreen\";\n// import DeliveryOrderDetailScreen from \"./src/screens/DeliveryOrderDetailScreen\";\n// import LoginScreen from \"./src/screens/LoginScreen\";\n// import LogoutScreen from \"./src/screens/LogoutScreen\";\n// import OrderDetailScreen from \"./src/screens/OrderDetailScreen\";\n// import OrderHistoryScreen from \"./src/screens/OrderHistoryScreen\";\n// import ProductScreen from \"./src/screens/ProductScreen\";\n// import ProfileScreen from \"./src/screens/ProfileScreen\";\n// import SalesOrderHistoryScreen from \"./src/screens/SalesOrderHistoryScreen\";\n// import SubscribeScreen from \"./src/screens/SubscribeScreen\";\n// import HomeScreen from \"./src/screens/HomeScreen\";\n// import Header from \"./src/components/Header\";\n// import { Switch } from \"react-native-gesture-handler\";\n\n// const tabClientNav = createBottomTabNavigator({\n//   Products: createStackNavigator({ ProductScreen }),\n//   productFlow: createStackNavigator({\n//     CartItems: CartItemScreen,\n//   }),\n//   orderHistory: createStackNavigator({\n//     OrderHistory: OrderHistoryScreen,\n//     OrderDetail: OrderDetailScreen,\n//   }),\n//   Profile: createStackNavigator({ ProfileScreen }),\n// });\n\n// const tabDeliveryNav = createBottomTabNavigator({\n//   orders: createStackNavigator({\n//     deliveryList: DeliveryListScreen,\n//     deliveryDetail: DeliveryOrderDetailScreen,\n//   }),\n//   Profile: createStackNavigator({ ProfileScreen }),\n// });\n\n// const tabSalesNav = createBottomTabNavigator({\n//   orders: createStackNavigator({\n//     salesList: SalesOrderHistoryScreen,\n//   }),\n//   add: createStackNavigator({ AddClientScreen }),\n//   Profile: createStackNavigator({ ProfileScreen }),\n// });\n// const loginStack = createStackNavigator({\n//   Login: LoginScreen,\n//   Subscribe: SubscribeScreen,\n// });\n// const tabGuestNav = createBottomTabNavigator({\n//   Products: createStackNavigator({ ProductScreen }),\n//   login: loginStack,\n// });\n\n// const CurrentNavigator = (role) => {\n//   switch (role) {\n//     case \"client\":\n//       return createDrawerNavigator({\n//         client: tabClientNav,\n//         CartItem: CartItemScreen,\n//         Profile: ProfileScreen,\n//       });\n//     case \"delivery\":\n//       return createDrawerNavigator({\n//         orders: tabDeliveryNav,\n//         Profile: createStackNavigator({ ProfileScreen }),\n//       });\n//     case \"sales\":\n//       return createDrawerNavigator({\n//         sales: tabSalesNav,\n//         add: AddClientScreen,\n//         Profile: ProfileScreen,\n//       });\n//     default:\n//       return createDrawerNavigator({\n//         products: createStackNavigator({ ProductScreen }),\n//         Login: createStackNavigator({ Login: LoginScreen }),\n//       });\n//   }\n// };\n// export default createAppContainer(CurrentNavigator(\"\"));\n// // const switchNavigator = createDrawerNavigator({\n// //   Home: HomeScreen,\n// //   products: guestFlow,\n// //   sales: salesFlow,\n// //   orders: deliveryFlow,\n// //   client: clientFlow,\n// // });\n\n// Dynamically Set Drawer/Sidebar Options in React Navigation Drawer\n// https://aboutreact.com/dynamically-change-sidebar-options/\n\nimport \"react-native-gesture-handler\";\n\nimport * as React from \"react\";\nimport { View, TouchableOpacity, Image, Text } from \"react-native\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from \"@react-navigation/drawer\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nimport FirstPage from \"./pages/FirstPage\";\nimport SecondPage from \"./pages/SecondPage\";\nimport ThirdPage from \"./pages/ThirdPage\";\nimport LandingPage from \"./pages/LandingPage\";\n\nimport CartItemScreen from \"./src/screens/CartItemScreen\";\nimport AddClientScreen from \"./src/screens/AddClientScreen\";\nimport DeliveryListScreen from \"./src/screens/DeliveryListScreen\";\nimport DeliveryOrderDetailScreen from \"./src/screens/DeliveryOrderDetailScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport LogoutScreen from \"./src/screens/LogoutScreen\";\nimport OrderDetailScreen from \"./src/screens/OrderDetailScreen\";\nimport OrderHistoryScreen from \"./src/screens/OrderHistoryScreen\";\nimport ProductScreen from \"./src/screens/ProductScreen\";\nimport ProfileScreen from \"./src/screens/ProfileScreen\";\nimport SalesOrderHistoryScreen from \"./src/screens/SalesOrderHistoryScreen\";\nimport SubscribeScreen from \"./src/screens/SubscribeScreen\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport Header from \"./src/components/Header\";\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst NavigationDrawerStructure = (props) => {\n  //Structure for the navigatin Drawer\n  const toggleDrawer = () => {\n    //Props to open/close the drawer\n    props.navigationProps.toggleDrawer();\n  };\n\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      <TouchableOpacity onPress={toggleDrawer}>\n        {/*Donute Button Image */}\n        <Image\n          source={{\n            uri:\n              \"https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png\",\n          }}\n          style={{ width: 25, height: 25, marginLeft: 5 }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst productScreenStack = ({ navigation, route }) => {\n  return (\n    <Stack.Navigator initialRouteName=\"FirstPage\">\n      <Stack.Screen\n        name=\"FirstPage\"\n        component={FirstPage}\n        initialParams={route.params}\n        options={{\n          title: \"First Page\", //Set Header Title\n          headerLeft: () => (\n            <NavigationDrawerStructure navigationProps={navigation} />\n          ),\n          headerStyle: {\n            backgroundColor: \"#f4511e\", //Set Header color\n          },\n          headerTintColor: \"#fff\", //Set Header text color\n          headerTitleStyle: {\n            fontWeight: \"bold\", //Set Header text style\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst secondScreenStack = ({ navigation }) => {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"SecondPage\"\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerStructure navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: \"#f4511e\", //Set Header color\n        },\n        headerTintColor: \"#fff\", //Set Header text color\n        headerTitleStyle: {\n          fontWeight: \"bold\", //Set Header text style\n        },\n      }}\n    >\n      <Stack.Screen\n        name=\"SecondPage\"\n        component={SecondPage}\n        options={{\n          title: \"Second Page\", //Set Header Title\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst thirdScreenStack = ({ navigation }) => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerStructure navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: \"#f4511e\", //Set Header color\n        },\n        headerTintColor: \"#fff\", //Set Header text color\n        headerTitleStyle: {\n          fontWeight: \"bold\", //Set Header text style\n        },\n      }}\n    >\n      <Stack.Screen\n        name=\"ThirdPage\"\n        component={ThirdPage}\n        options={{\n          title: \"Third Page\", //Set Header Title\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst drawerStack = ({ route }) => {\n  return (\n    <Drawer.Navigator\n      drawerContentOptions={{\n        activeTintColor: \"#e91e63\",\n      }}\n      drawerContent={(props) => {\n        return (\n          <DrawerContentScrollView {...props}>\n            <DrawerItemList {...props} />\n            {route.params.userType === \"user\" ? (\n              <DrawerItem\n                icon={({ color, size }) => (\n                  <MaterialCommunityIcons\n                    name=\"account-outline\"\n                    color={color}\n                    size={size}\n                  />\n                )}\n                label={({ color }) => (\n                  <Text style={{ color }}>Change Access to Guest</Text>\n                )}\n                onPress={() =>\n                  props.navigation.navigate(\"drawerStack\", {\n                    userType: \"guest\",\n                  })\n                }\n              />\n            ) : null}\n          </DrawerContentScrollView>\n        );\n      }}\n    >\n      <Drawer.Screen\n        name=\"FirstPage\"\n        options={{ drawerLabel: \"First page Option\" }}\n        component={productScreenStack}\n        initialParams={{ userType: route.params.userType }}\n      />\n      {route.params.userType === \"user\" ? (\n        <>\n          <Drawer.Screen\n            name=\"SecondPage\"\n            options={{ drawerLabel: \"Second page Option\" }}\n            component={secondScreenStack}\n          />\n          <Drawer.Screen\n            name=\"ThirdPage\"\n            options={{ drawerLabel: \"Third page Option\" }}\n            component={thirdScreenStack}\n          />\n        </>\n      ) : null}\n    </Drawer.Navigator>\n  );\n};\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        <Stack.Screen name=\"LandingPage\" component={LandingPage} />\n        <Stack.Screen name=\"drawerStack\" component={drawerStack} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}