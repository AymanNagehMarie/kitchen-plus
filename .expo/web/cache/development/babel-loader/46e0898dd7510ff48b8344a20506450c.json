{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\ES6\\\\KitchenPlus\\\\kitchen-plus\\\\kitchen-plus\\\\src\\\\screens\\\\LoginScreen.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Header from \"../components/Header\";\nimport Spacer from \"../components/Spacer\";\nimport { Text, Button, Input } from \"react-native-elements\";\nvar nav;\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var errorMessage = _ref.errorMessage,\n      onSubmit = _ref.onSubmit,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  nav = navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    label: \"Email\",\n    value: email,\n    onChangeText: setEmail,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    secureTextEntry: true,\n    label: \"Password\",\n    value: password,\n    onChangeText: setPassword,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), React.createElement(Spacer, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Save\",\n    onPress: function onPress() {\n      return onSubmit({\n        email: email,\n        password: password\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Cancel\",\n    onPress: function onPress() {\n      return onSubmit({\n        email: email,\n        password: password\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    marginBottom: 250\n  },\n  button: {\n    flex: 1,\n    flexDirection: \"row\"\n  }\n});\nLoginScreen.navigationOptions = {\n  header: function header() {\n    return false;\n  },\n  headerTitle: function headerTitle() {\n    return React.createElement(Header, {\n      title: \"Login\",\n      navigation: nav,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 22\n      }\n    });\n  }\n};\nexport default LoginScreen;","map":{"version":3,"sources":["C:/ES6/KitchenPlus/kitchen-plus/kitchen-plus/src/screens/LoginScreen.js"],"names":["React","useState","Header","Spacer","Text","Button","Input","nav","LoginScreen","errorMessage","onSubmit","navigation","email","setEmail","password","setPassword","styles","container","button","StyleSheet","create","flex","justifyContent","marginBottom","flexDirection","navigationOptions","header","headerTitle"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport Header from \"../components/Header\";\r\nimport Spacer from \"../components/Spacer\";\r\nimport { Text, Button, Input } from \"react-native-elements\";\r\nlet nav;\r\n\r\nconst LoginScreen = ({ errorMessage, onSubmit, navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  nav = navigation;\r\n  return (\r\n    <View style={styles.container}>\r\n      <Input\r\n        label=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        autoCapitalize=\"none\"\r\n        autoCorrect={false}\r\n      />\r\n      <Spacer />\r\n      <Input\r\n        secureTextEntry\r\n        label=\"Password\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        autoCapitalize=\"none\"\r\n        autoCorrect={false}\r\n      />\r\n\r\n      <Spacer style={styles.button}>\r\n        <Button title=\"Save\" onPress={() => onSubmit({ email, password })} />\r\n        <Button title=\"Cancel\" onPress={() => onSubmit({ email, password })} />\r\n      </Spacer>\r\n    </View>\r\n  );\r\n};\r\n//{errorMessage ? (\r\n//<Text style={styles.errorMessage}>{errorMessage}</Text>\r\n//) : null}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    marginBottom: 250,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n\r\nLoginScreen.navigationOptions = {\r\n  header: () => false,\r\n  headerTitle: () => <Header title=\"Login\" navigation={nav} />,\r\n};\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}